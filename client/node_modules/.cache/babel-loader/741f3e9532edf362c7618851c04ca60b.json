{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var MuiPickersAdapterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  MuiPickersAdapterContext.displayName = 'MuiPickersAdapterContext';\n}\n\n/**\n * @ignore - do not document.\n */\nfunction LocalizationProvider(props) {\n  var children = props.children,\n    Utils = props.dateAdapter,\n    dateFormats = props.dateFormats,\n    dateLibInstance = props.dateLibInstance,\n    locale = props.locale;\n  var utils = React.useMemo(function () {\n    return new Utils({\n      locale: locale,\n      formats: dateFormats,\n      instance: dateLibInstance\n    });\n  }, [Utils, locale, dateFormats, dateLibInstance]);\n  var defaultDates = React.useMemo(function () {\n    return {\n      minDate: utils.date('1900-01-01T00:00:00.000'),\n      maxDate: utils.date('2099-12-31T00:00:00.000')\n    };\n  }, [utils]);\n  var contextValue = React.useMemo(function () {\n    return {\n      utils: utils,\n      defaultDates: defaultDates\n    };\n  }, [defaultDates, utils]);\n  return /*#__PURE__*/_jsx(MuiPickersAdapterContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? LocalizationProvider.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * DateIO adapter class function\n   */\n  dateAdapter: PropTypes.func.isRequired,\n  /**\n   * Formats that are used for any child pickers\n   */\n  dateFormats: PropTypes.shape({\n    dayOfMonth: PropTypes.string,\n    fullDate: PropTypes.string,\n    fullDateTime: PropTypes.string,\n    fullDateTime12h: PropTypes.string,\n    fullDateTime24h: PropTypes.string,\n    fullDateWithWeekday: PropTypes.string,\n    fullTime: PropTypes.string,\n    fullTime12h: PropTypes.string,\n    fullTime24h: PropTypes.string,\n    hours12h: PropTypes.string,\n    hours24h: PropTypes.string,\n    keyboardDate: PropTypes.string,\n    keyboardDateTime: PropTypes.string,\n    keyboardDateTime12h: PropTypes.string,\n    keyboardDateTime24h: PropTypes.string,\n    minutes: PropTypes.string,\n    month: PropTypes.string,\n    monthAndDate: PropTypes.string,\n    monthAndYear: PropTypes.string,\n    monthShort: PropTypes.string,\n    normalDate: PropTypes.string,\n    normalDateWithWeekday: PropTypes.string,\n    seconds: PropTypes.string,\n    shortDate: PropTypes.string,\n    weekday: PropTypes.string,\n    weekdayShort: PropTypes.string,\n    year: PropTypes.string\n  }),\n  /**\n   * Date library instance you are using, if it has some global overrides\n   * ```jsx\n   * dateLibInstance={momentTimeZone}\n   * ```\n   */\n  dateLibInstance: PropTypes.any,\n  /**\n   * Locale for the date library you are using\n   */\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n} : void 0;\nexport default LocalizationProvider;","map":{"version":3,"names":["React","PropTypes","jsx","_jsx","MuiPickersAdapterContext","createContext","process","env","NODE_ENV","displayName","LocalizationProvider","props","children","Utils","dateAdapter","dateFormats","dateLibInstance","locale","utils","useMemo","formats","instance","defaultDates","minDate","date","maxDate","contextValue","Provider","value","propTypes","node","func","isRequired","shape","dayOfMonth","string","fullDate","fullDateTime","fullDateTime12h","fullDateTime24h","fullDateWithWeekday","fullTime","fullTime12h","fullTime24h","hours12h","hours24h","keyboardDate","keyboardDateTime","keyboardDateTime12h","keyboardDateTime24h","minutes","month","monthAndDate","monthAndYear","monthShort","normalDate","normalDateWithWeekday","seconds","shortDate","weekday","weekdayShort","year","any","oneOfType","object"],"sources":["C:/Users/adoud/Desktop/hotel_mern/client/node_modules/@material-ui/lab/LocalizationProvider/LocalizationProvider.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const MuiPickersAdapterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  MuiPickersAdapterContext.displayName = 'MuiPickersAdapterContext';\n}\n\n/**\n * @ignore - do not document.\n */\nfunction LocalizationProvider(props) {\n  const {\n    children,\n    dateAdapter: Utils,\n    dateFormats,\n    dateLibInstance,\n    locale\n  } = props;\n  const utils = React.useMemo(() => new Utils({\n    locale,\n    formats: dateFormats,\n    instance: dateLibInstance\n  }), [Utils, locale, dateFormats, dateLibInstance]);\n  const defaultDates = React.useMemo(() => {\n    return {\n      minDate: utils.date('1900-01-01T00:00:00.000'),\n      maxDate: utils.date('2099-12-31T00:00:00.000')\n    };\n  }, [utils]);\n  const contextValue = React.useMemo(() => {\n    return {\n      utils,\n      defaultDates\n    };\n  }, [defaultDates, utils]);\n  return /*#__PURE__*/_jsx(MuiPickersAdapterContext.Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? LocalizationProvider.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * DateIO adapter class function\n   */\n  dateAdapter: PropTypes.func.isRequired,\n\n  /**\n   * Formats that are used for any child pickers\n   */\n  dateFormats: PropTypes.shape({\n    dayOfMonth: PropTypes.string,\n    fullDate: PropTypes.string,\n    fullDateTime: PropTypes.string,\n    fullDateTime12h: PropTypes.string,\n    fullDateTime24h: PropTypes.string,\n    fullDateWithWeekday: PropTypes.string,\n    fullTime: PropTypes.string,\n    fullTime12h: PropTypes.string,\n    fullTime24h: PropTypes.string,\n    hours12h: PropTypes.string,\n    hours24h: PropTypes.string,\n    keyboardDate: PropTypes.string,\n    keyboardDateTime: PropTypes.string,\n    keyboardDateTime12h: PropTypes.string,\n    keyboardDateTime24h: PropTypes.string,\n    minutes: PropTypes.string,\n    month: PropTypes.string,\n    monthAndDate: PropTypes.string,\n    monthAndYear: PropTypes.string,\n    monthShort: PropTypes.string,\n    normalDate: PropTypes.string,\n    normalDateWithWeekday: PropTypes.string,\n    seconds: PropTypes.string,\n    shortDate: PropTypes.string,\n    weekday: PropTypes.string,\n    weekdayShort: PropTypes.string,\n    year: PropTypes.string\n  }),\n\n  /**\n   * Date library instance you are using, if it has some global overrides\n   * ```jsx\n   * dateLibInstance={momentTimeZone}\n   * ```\n   */\n  dateLibInstance: PropTypes.any,\n\n  /**\n   * Locale for the date library you are using\n   */\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n} : void 0;\nexport default LocalizationProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}