{"ast":null,"code":"import { CREATE, FETCH, FETCH_ALL, AVAILABLE, ROOM_DET, BOOK_DET, DELETE } from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\n/* Actions for handling API state */\n\nexport const getAllAvailable = params => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchAvailableRooms(params);\n    dispatch({\n      type: AVAILABLE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllBookings = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchAllBookings();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n// Actions for booking details\n\nexport const postRoomDetails = data => {\n  return {\n    type: ROOM_DET,\n    payload: data\n  };\n};\nexport const postBookingDetails = data => {\n  return {\n    type: BOOK_DET,\n    payload: data\n  };\n};\nexport const postBooking = details => async dispatch => {\n  try {\n    const newBooking = {\n      ...details.formData,\n      ...details.guestDetails.booking,\n      ...details.guestDetails.room\n    };\n    const {\n      data\n    } = await api.createBooking(newBooking);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleBooking = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchExistingBooking(id);\n    dispatch({\n      type: FETCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteBooking = id => async dispatch => {\n  try {\n    await api.deleteBooking(id);\n    dispatch({\n      type: DELETE,\n      payload: id.id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["CREATE","FETCH","FETCH_ALL","AVAILABLE","ROOM_DET","BOOK_DET","DELETE","api","getAllAvailable","params","dispatch","data","fetchAvailableRooms","type","payload","error","console","log","getAllBookings","fetchAllBookings","postRoomDetails","postBookingDetails","postBooking","details","newBooking","formData","guestDetails","booking","room","createBooking","getSingleBooking","id","fetchExistingBooking","deleteBooking"],"sources":["C:/Users/adoud/Desktop/hotel_mern/client/src/actions/booking.js"],"sourcesContent":["import {\r\n  CREATE,\r\n  FETCH,\r\n  FETCH_ALL,\r\n  AVAILABLE,\r\n  ROOM_DET,\r\n  BOOK_DET,\r\n  DELETE,\r\n} from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\n/* Actions for handling API state */\r\n\r\nexport const getAllAvailable = (params) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchAvailableRooms(params);\r\n\r\n    dispatch({ type: AVAILABLE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAllBookings = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchAllBookings();\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n// Actions for booking details\r\n\r\nexport const postRoomDetails = (data) => {\r\n  return {\r\n    type: ROOM_DET,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postBookingDetails = (data) => {\r\n  return {\r\n    type: BOOK_DET,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postBooking = (details) => async (dispatch) => {\r\n  try {\r\n    const newBooking = {\r\n      ...details.formData,\r\n      ...details.guestDetails.booking,\r\n      ...details.guestDetails.room,\r\n    };\r\n\r\n    const { data } = await api.createBooking(newBooking);\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSingleBooking = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchExistingBooking(id);\r\n    dispatch({ type: FETCH, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteBooking = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deleteBooking(id);\r\n\r\n    dispatch({ type: DELETE, payload: id.id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,MAAM,QACD,0BAA0B;AACjC,OAAO,KAAKC,GAAG,MAAM,QAAQ;;AAE7B;;AAEA,OAAO,MAAMC,eAAe,GAAIC,MAAM,IAAK,MAAOC,QAAQ,IAAK;EAC7D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACK,mBAAmB,CAACH,MAAM,CAAC;IAEtDC,QAAQ,CAAC;MAAEG,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAM,MAAOR,QAAQ,IAAK;EACtD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACY,gBAAgB,EAAE;IAC7CT,QAAQ,CAAC;MAAEG,IAAI,EAAEX,SAAS;MAAEY,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AACD;;AAEA,OAAO,MAAMK,eAAe,GAAIT,IAAI,IAAK;EACvC,OAAO;IACLE,IAAI,EAAET,QAAQ;IACdU,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMU,kBAAkB,GAAIV,IAAI,IAAK;EAC1C,OAAO;IACLE,IAAI,EAAER,QAAQ;IACdS,OAAO,EAAEH;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMW,WAAW,GAAIC,OAAO,IAAK,MAAOb,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMc,UAAU,GAAG;MACjB,GAAGD,OAAO,CAACE,QAAQ;MACnB,GAAGF,OAAO,CAACG,YAAY,CAACC,OAAO;MAC/B,GAAGJ,OAAO,CAACG,YAAY,CAACE;IAC1B,CAAC;IAED,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACsB,aAAa,CAACL,UAAU,CAAC;IACpDd,QAAQ,CAAC;MAAEG,IAAI,EAAEb,MAAM;MAAEc,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMe,gBAAgB,GAAIC,EAAE,IAAK,MAAOrB,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,GAAG,CAACyB,oBAAoB,CAACD,EAAE,CAAC;IACnDrB,QAAQ,CAAC;MAAEG,IAAI,EAAEZ,KAAK;MAAEa,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMkB,aAAa,GAAIF,EAAE,IAAK,MAAOrB,QAAQ,IAAK;EACvD,IAAI;IACF,MAAMH,GAAG,CAAC0B,aAAa,CAACF,EAAE,CAAC;IAE3BrB,QAAQ,CAAC;MAAEG,IAAI,EAAEP,MAAM;MAAEQ,OAAO,EAAEiB,EAAE,CAACA;IAAG,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOhB,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}