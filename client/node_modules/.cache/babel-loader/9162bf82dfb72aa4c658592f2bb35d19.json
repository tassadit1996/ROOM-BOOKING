{"ast":null,"code":"export const getMeridiem = (date, utils) => {\n  if (!date) {\n    return null;\n  }\n  return utils.getHours(date) >= 12 ? 'pm' : 'am';\n};\nexport const convertValueToMeridiem = (value, meridiem, ampm) => {\n  if (ampm) {\n    const currentMeridiem = value >= 12 ? 'pm' : 'am';\n    if (currentMeridiem !== meridiem) {\n      return meridiem === 'am' ? value - 12 : value + 12;\n    }\n  }\n  return value;\n};\nexport const convertToMeridiem = (time, meridiem, ampm, utils) => {\n  const newHoursAmount = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);\n  return utils.setHours(time, newHoursAmount);\n};\nexport function getSecondsInDay(date, utils) {\n  return utils.getHours(date) * 3600 + utils.getMinutes(date) * 60 + utils.getSeconds(date);\n}\nexport const createIsAfterIgnoreDatePart = (disableIgnoringDatePartForTimeValidation, utils) => (dateLeft, dateRight) => {\n  if (disableIgnoringDatePartForTimeValidation) {\n    return utils.isAfter(dateLeft, dateRight);\n  }\n  return getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);\n};\nexport const validateTime = (utils, value, _ref) => {\n  let {\n    minTime,\n    maxTime,\n    shouldDisableTime,\n    disableIgnoringDatePartForTimeValidation\n  } = _ref;\n  const date = utils.date(value);\n  const isAfterComparingFn = createIsAfterIgnoreDatePart(Boolean(disableIgnoringDatePartForTimeValidation), utils);\n  if (value === null) {\n    return null;\n  }\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n    case Boolean(minTime && isAfterComparingFn(minTime, date)):\n      return 'minTime';\n    case Boolean(maxTime && isAfterComparingFn(date, maxTime)):\n      return 'maxTime';\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getHours(date), 'hours')):\n      return 'shouldDisableTime-hours';\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getMinutes(date), 'minutes')):\n      return 'shouldDisableTime-minutes';\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getSeconds(date), 'seconds')):\n      return 'shouldDisableTime-seconds';\n    default:\n      return null;\n  }\n};","map":{"version":3,"names":["getMeridiem","date","utils","getHours","convertValueToMeridiem","value","meridiem","ampm","currentMeridiem","convertToMeridiem","time","newHoursAmount","setHours","getSecondsInDay","getMinutes","getSeconds","createIsAfterIgnoreDatePart","disableIgnoringDatePartForTimeValidation","dateLeft","dateRight","isAfter","validateTime","minTime","maxTime","shouldDisableTime","isAfterComparingFn","Boolean","isValid"],"sources":["C:/Users/adoud/Desktop/hotel_mern/client/node_modules/@material-ui/lab/internal/pickers/time-utils.js"],"sourcesContent":["export const getMeridiem = (date, utils) => {\n  if (!date) {\n    return null;\n  }\n\n  return utils.getHours(date) >= 12 ? 'pm' : 'am';\n};\nexport const convertValueToMeridiem = (value, meridiem, ampm) => {\n  if (ampm) {\n    const currentMeridiem = value >= 12 ? 'pm' : 'am';\n\n    if (currentMeridiem !== meridiem) {\n      return meridiem === 'am' ? value - 12 : value + 12;\n    }\n  }\n\n  return value;\n};\nexport const convertToMeridiem = (time, meridiem, ampm, utils) => {\n  const newHoursAmount = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);\n  return utils.setHours(time, newHoursAmount);\n};\nexport function getSecondsInDay(date, utils) {\n  return utils.getHours(date) * 3600 + utils.getMinutes(date) * 60 + utils.getSeconds(date);\n}\nexport const createIsAfterIgnoreDatePart = (disableIgnoringDatePartForTimeValidation, utils) => (dateLeft, dateRight) => {\n  if (disableIgnoringDatePartForTimeValidation) {\n    return utils.isAfter(dateLeft, dateRight);\n  }\n\n  return getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);\n};\nexport const validateTime = (utils, value, {\n  minTime,\n  maxTime,\n  shouldDisableTime,\n  disableIgnoringDatePartForTimeValidation\n}) => {\n  const date = utils.date(value);\n  const isAfterComparingFn = createIsAfterIgnoreDatePart(Boolean(disableIgnoringDatePartForTimeValidation), utils);\n\n  if (value === null) {\n    return null;\n  }\n\n  switch (true) {\n    case !utils.isValid(value):\n      return 'invalidDate';\n\n    case Boolean(minTime && isAfterComparingFn(minTime, date)):\n      return 'minTime';\n\n    case Boolean(maxTime && isAfterComparingFn(date, maxTime)):\n      return 'maxTime';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getHours(date), 'hours')):\n      return 'shouldDisableTime-hours';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getMinutes(date), 'minutes')):\n      return 'shouldDisableTime-minutes';\n\n    case Boolean(shouldDisableTime && shouldDisableTime(utils.getSeconds(date), 'seconds')):\n      return 'shouldDisableTime-seconds';\n\n    default:\n      return null;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}