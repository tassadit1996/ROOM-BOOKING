{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { validateDate } from '../internal/pickers/date-utils';\nimport { useUtils, useNow } from '../internal/pickers/hooks/useUtils';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay !== null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n        const needMonthSwitch = Boolean(action.focusedDay) && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n    default:\n      throw new Error('missing support');\n  }\n};\nexport function useCalendarState(_ref2) {\n  let {\n    date,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus = false,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate\n  } = _ref2;\n  var _ref;\n  const now = useNow();\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date || now,\n    currentMonth: utils.startOfMonth((_ref = date != null ? date : defaultCalendarMonth) != null ? _ref : now),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate != null ? newDate : now;\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  const isDateDisabled = React.useCallback(day => validateDate(utils, day, {\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate,\n    shouldDisableDate\n  }) !== null, [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]);\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = React.useCallback(newFocusedDate => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n}","map":{"version":3,"names":["_extends","React","validateDate","useUtils","useNow","createCalendarStateReducer","reduceAnimations","disableSwitchToMonthOnDayFocus","utils","state","action","type","slideDirection","direction","currentMonth","newMonth","isMonthSwitchingAnimating","focusedDay","isSameDay","needMonthSwitch","Boolean","isSameMonth","startOfMonth","isAfterDay","Error","useCalendarState","date","defaultCalendarMonth","disableFuture","disablePast","maxDate","minDate","onMonthChange","shouldDisableDate","_ref","now","reducerFn","useRef","current","calendarState","dispatch","useReducer","handleChangeMonth","useCallback","payload","changeMonth","newDate","newDateRequested","isDateDisabled","day","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate"],"sources":["C:/Users/adoud/Desktop/hotel_mern/client/node_modules/@material-ui/lab/CalendarPicker/useCalendarState.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { validateDate } from '../internal/pickers/date-utils';\nimport { useUtils, useNow } from '../internal/pickers/hooks/useUtils';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay !== null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n\n        const needMonthSwitch = Boolean(action.focusedDay) && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n\n    default:\n      throw new Error('missing support');\n  }\n};\nexport function useCalendarState({\n  date,\n  defaultCalendarMonth,\n  disableFuture,\n  disablePast,\n  disableSwitchToMonthOnDayFocus = false,\n  maxDate,\n  minDate,\n  onMonthChange,\n  reduceAnimations,\n  shouldDisableDate\n}) {\n  var _ref;\n\n  const now = useNow();\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: date || now,\n    currentMonth: utils.startOfMonth((_ref = date != null ? date : defaultCalendarMonth) != null ? _ref : now),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate != null ? newDate : now;\n\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, now, utils]);\n  const isDateDisabled = React.useCallback(day => validateDate(utils, day, {\n    disablePast,\n    disableFuture,\n    minDate,\n    maxDate,\n    shouldDisableDate\n  }) !== null, [disableFuture, disablePast, maxDate, minDate, shouldDisableDate, utils]);\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = React.useCallback(newFocusedDate => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate\n      });\n    }\n  }, [isDateDisabled]);\n  return {\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}